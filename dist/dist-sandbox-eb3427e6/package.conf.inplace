[InstalledPackageInfo {installedPackageId = InstalledPackageId "markup-0.0.2-inplace", sourcePackageId = PackageIdentifier {pkgName = PackageName "markup", pkgVersion = Version {versionBranch = [0,0,2], versionTags = []}}, license = MIT, copyright = "", maintainer = "Athan Clark <athan.clark@gmail.com>", author = "Athan Clark <athan.clark@gmail.com>", stability = "", homepage = "", pkgUrl = "", synopsis = "Abstraction for markup languages", description = "This library tries to make things more uniformly controlled when working with\nmarkup languages in haskell - namely /deployment/ of markup assets.\n\nDeployment, from this library's perspective, means /how/ something can be\nrendered to markup, yet still achieve the same \"result\" to the end user (namely\nthe DOM).\n\nWe use monad transformers to infer the deployment mechanism for a context of\nmarkup. The three deployment mechanisms provided include /inline/ (content is\nslapped between markup tags), /hosted/ (entirely external - uses raw text as a\nurl), and /local/ (which uses the <hackage.haskell.org/package/urlpath urlpath>\nlibrary to realize what kind of link to create).\n\nAs an example, here is remotely hosted image:\n\n> image' = renderMarkup Image :: Monad m => HostedMarkupT m T.Text (Html ())\n>\n> image = runHostedMarkupT image' \"foo.png\"\n>\n> \955> renderText image\n>\n> <img src=\"foo.png\">\n\nHere is the same example, going relative instead:\n\n> image' = renderMarkup Image :: (Monad m, Url UrlString AbsoluteUrl) => LocalMarkupT UrlString m (HtmlT AbsoluteUrl ())\n>\n> \955> (runUrlReader $ renderTextT $ runIdentity $ runLocalMarkupT image' $\n>      \"foo.png\" <?> (\"key\",\"bar\")\n>    ) \"example.com\"\n>\n> \"<img src=\\\"example.com/foo.png?key=bar\\\">\"\n\nRight now this library isn't so great, hopefully it will get better soon :)", category = "", exposed = True, exposedModules = ["Data.Markup","Data.Markup.Types","Data.Markup.Class","Data.Markup.Library"], hiddenModules = [], trusted = False, importDirs = ["/home/athan/dev/markup-0.0.1/dist/dist-sandbox-eb3427e6/build"], libraryDirs = ["/home/athan/dev/markup-0.0.1/dist/dist-sandbox-eb3427e6/build"], hsLibraries = ["HSmarkup-0.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.1-1a55ebc8256b39ccbff004d48b3eb834",InstalledPackageId "blaze-html-0.7.0.3-46a28d18e2cb5c0658fa5db5b29e07e9",InstalledPackageId "blaze-markup-0.6.1.1-bb6845fcfc99b634bc2afc157c20d6ce",InstalledPackageId "lucid-2.5-5c3e83e7306ed2ff7f742e3f5033035c",InstalledPackageId "mtl-2.2.1-524abcb9484b29bc953548ece20e74a1",InstalledPackageId "text-1.2.0.0-59faa6d3b87ea544f3932e4048afe302",InstalledPackageId "transformers-0.4.2.0-42dac73d11bf02a75b335a2b897fd353",InstalledPackageId "urlpath-0.0.5-f547a172a51d01f89485ac8c5cebc9c3"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/athan/dev/markup-0.0.1/dist/dist-sandbox-eb3427e6/doc/html/markup/markup.haddock"], haddockHTMLs = ["/home/athan/dev/markup-0.0.1/dist/dist-sandbox-eb3427e6/doc/html/markup"]}
]