name: urlpath
version: 0.0.5
id: urlpath-0.0.5-f547a172a51d01f89485ac8c5cebc9c3
license: MIT
copyright:
maintainer: Athan Clark <athan.clark@gmail.com>
stability:
homepage:
package-url:
synopsis: Painfully simple URL writing combinators
description: Simple URL DSL for Haskell.
             .
             Use raw combinators (kinda useless) ...
             .
             >  render $ "foo.php" <?> ("key1","bar") <&> ("key2","baz")
             >
             >  ↪ "foo.php?key1=bar&key2=baz"
             .
             ... or use the MonadReader instance for a configurable root ...
             .
             >  let url = runReader $ expandAbsolute $ "foo.php" <?> ("key1","bar") <&> ("key2","baz")
             >  url "example.com"
             >
             >  ↪ "example.com/foo.php?key1=bar&key2=baz"
             .
             ... in Lucid ...
             .
             >  (runReader $ renderTextT $
             >    (\a -> do
             >      foo <- lift $ expandAbsolute a
             >      script_ [src_ foo] "" )
             >    ("foo" <?> ("bar","baz"))
             >  ) "example.com"
             >
             >  ↪ "<script src=\"example.com/foo?bar=baz\"></script>"
             .
             ... and in Scotty ...
             .
             >  main :: IO ()
             >  main = scottyT 3000
             >      rootConf
             >      rootConf
             >      run
             >
             >    where
             >      rootConf = flip runReaderT "http://example.com"
             >
             >      run :: ( MonadIO m
             >             , MonadReader T.Text m ) =>
             >             ScottyT LT.Text m ()
             >      run = get "/" $ do
             >        path <- lift $ expandAbsolute $ "foo" <?> ("bar","baz")
             >        text $ LT.fromStrict path
             >
             >  λ> curl localhost:3000/
             >  ↪ "http://example.com/foo?bar=baz"
category: Web
author: Athan Clark <athan.clark@gmail.com>
exposed: True
exposed-modules: UrlPath UrlPath.Types
hidden-modules:
trusted: False
import-dirs: /home/athan/dev/markup-0.0.1/.cabal-sandbox/lib/x86_64-linux-ghc-7.8.3/urlpath-0.0.5
library-dirs: /home/athan/dev/markup-0.0.1/.cabal-sandbox/lib/x86_64-linux-ghc-7.8.3/urlpath-0.0.5
hs-libraries: HSurlpath-0.0.5
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.7.0.1-1a55ebc8256b39ccbff004d48b3eb834
         mtl-2.2.1-524abcb9484b29bc953548ece20e74a1
         text-1.2.0.0-59faa6d3b87ea544f3932e4048afe302
         transformers-0.4.2.0-42dac73d11bf02a75b335a2b897fd353
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/athan/dev/markup-0.0.1/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.8.3/urlpath-0.0.5/html/urlpath.haddock
haddock-html: /home/athan/dev/markup-0.0.1/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.8.3/urlpath-0.0.5/html
